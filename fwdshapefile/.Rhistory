V_INFLA19=exp(INFLACION19)
(CambioINFLACION19=100*(1-1/V_INFLA19))
REGREVS20 = glm(BDU$`2020PERCOR` ~ BDU$`2020DES` + BDU$`2020INFLACION`, family = poisson(link = "log"))
summary(REGREVS20)
equatiomatic::extract_eq(REGREVS20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVS20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DESEMPLEO20=coef(REGREVS20)[['BDU$`2020DES`']]
V_DES20=exp(DESEMPLEO20)
(CambioDESEMPLEO20=100*(1-1/V_DES20))
INFLACION20=coef(REGREVS20)[['BDU$`2020INFLACION`']]
V_INFLA20=exp(INFLACION20)
(CambioINFLACION19=100*(1-1/V_INFLA20))
REGREVANA19 = glm(BDU$`2019PERCOR` ~ BDU$`2019PAR` + BDU$`2019IDH` + BDU$`2019LEG`,family = poisson(link = "log"))
summary(REGREVANA19)
equatiomatic::extract_eq(REGREVANA19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVANA19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DEMOCRACIA19=coef(REGREVANA19)[['BDU$`2019PAR`']]
V_DEM19=exp(DEMOCRACIA19)
(CambioDEMOCRACIA19=100*(1-1/V_DEM19))
IDH19=coef(REGREVANA19)[['BDU$`2019IDH`']]
V_IDH19=exp(IDH19)
(CambioIDH19=100*(V_IDH19))
LEGITIMIDAD19=coef(REGREVANA19)[['BDU$`2019LEG`']]
V_LEG19=exp(LEGITIMIDAD19)
(CambioLEGITIMIDAD20=100*(1-1/V_LEG19))
REGREVANA20 = glm(BDU$`2020PERCOR` ~ BDU$`2020PAR` + BDU$`2020IDH` + BDU$`2020LEG`,family = poisson(link = "log"))
summary(REGREVANA20)
equatiomatic::extract_eq(REGREVANA20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVANA20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DEMOCRACIA20=coef(REGREVANA20)[['BDU$`2020PAR`']]
V_DEM20=exp(DEMOCRACIA20)
(CambioDEMOCRACIA20=100*(1-1/V_DEM20))
IDH20=coef(REGREVANA20)[['BDU$`2020IDH`']]
V_IDH20=exp(IDH20)
(CambioIDH20=100*(V_IDH20))
LEGITIMIDAD20=coef(REGREVANA20)[['BDU$`2020LEG`']]
V_LEG20=exp(LEGITIMIDAD20)
(CambioLEGITIMIDAD20=100*(1-1/V_LEG20))
library(sp)
library(rgdal)
fromGit=("https://github.com/santiagomv29/PRACTICAS_ESTA2/tree/main/fwdshapefile") #link desde github
setwd("~/GitHub/PRACTICAS_ESTA2/fwdshapefile")
library(sp)
library(rgdal)
library(ggplot2)
mapDIS=sf::read_sf("world-administrative-boundaries.shp")
setwd()
library(sp)
library(rgdal)
library(ggplot2)
mapDIS=sf::read_sf("fwdshapefile/world-administrative-boundaries.shp")
View(BDU)
head(mapDIS)
MAP = merge(mapDIS,BDU, by.x = "iso3", by.y = "ISO3", all.x = T)
MAP = merge(mapDIS,BDU, by.x = "iso3", by.y = "ISO", all.x = T)
names(MAP)
mapaleyendaL= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=mapDEP2,
aes(fill=`2019PERCOR`),color = NA)
mapaleyendaL= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=MAP,
aes(fill=`2019PERCOR`),color = NA)
mapa3= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Corruption", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa3
mapaleyendaL= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=MAP,
aes(fill=`2019PERCOR`),color = NA)
mapa3= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Percepción de corrupción 2019", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa3
mapaleyendaL= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=MAP,
aes(fill=`2020PERCOR`),color = NA)
mapa4= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Percepción de corrupción 2020", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa4
library(rio)
library(dplyr)
library(ggplot2)
library(cowplot)
library(kableExtra)
library(equatiomatic)
library(tables)
library(rmarkdown)
library(reshape)
library(DT)
library(modelsummary)
library(factoextra)
library(cluster)
LinkBDU = "https://github.com/santiagomv29/PRACTICAS_ESTA2/raw/main/dataunificada.csv"
library(rio)
BDU = import(LinkBDU)
datatable(BDU, filter = "top")
library(sp)
library(rgdal)
library(ggplot2)
mapDIS=sf::read_sf("fwdshapefile/world-administrative-boundaries.shp")
MAP = merge(mapDIS,BDU, by.x = "iso3", by.y = "ISO", all.x = T)
mapaleyendaL= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=MAP,
aes(fill=`2019PERCOR`),color = NA)
mapa3= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Percepción de corrupción 2019", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa3
mapaleyendaL2= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL2= mapaleyendaL2 + geom_sf(data=MAP,
aes(fill=`2020PERCOR`),color = NA)
mapa4= mapaleyL2 +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Percepción de corrupción 2020", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa4
REGREVA19 = glm(BDU$`2019PERCOR` ~ BDU$`2019INDEP` + BDU$`2019ELECT` + BDU$`2019AUSCORR`,family = poisson(link = "log"))
summary(REGREVA19)
equatiomatic::extract_eq(REGREVA19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVA19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
INDEPENDENCIA19=coef(REGREVA19)[['BDU$`2019INDEP`']]
V_INJUS19=exp(INDEPENDENCIA19)
(CambioINDEPENDENCIA19=100*(V_INJUS19))
ELECTO19=coef(REGREVA19)[['BDU$`2019ELECT`']]
V_ELECT19=exp(ELECTO19)
(CambioELECTO19=100*(1-1/V_ELECT19))
AUSENCIA19=coef(REGREVA19)[['BDU$`2019AUSCORR`']]
V_AUSCORR19=exp(AUSENCIA19)
(CambioAUSENCIA19=100*(V_AUSCORR19))
REGREVA20 = glm(BDU$`2020PERCOR` ~ BDU$`2020INDEP` + BDU$`2020ELECT` + BDU$`2020AUSCORR`,family = poisson(link = "log"))
summary(REGREVA20)
equatiomatic::extract_eq(REGREVA20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVA20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
INDEPENDENCIA20=coef(REGREVA20)[['BDU$`2020INDEP`']]
V_INJUS20=exp(INDEPENDENCIA20)
(CambioINDEPENDENCIA20=100*(V_INJUS20))
ELECTO20=coef(REGREVA20)[['BDU$`2020ELECT`']]
V_ELECT20=exp(ELECTO20)
(CambioELECTO20=100*(1-1/V_ELECT20))
AUSENCIA20=coef(REGREVA20)[['BDU$`2020AUSCORR`']]
V_AUSCORR20=exp(AUSENCIA20)
(CambioAUSENCIA20=100*(V_AUSCORR20))
REGREVS19 = glm(BDU$`2019PERCOR` ~ BDU$`2019DES` + BDU$`2019INFLACION`,family = poisson(link = "log"))
summary(REGREVS19)
equatiomatic::extract_eq(REGREVS19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVS19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DESEMPLEO19=coef(REGREVS19)[['BDU$`2019DES`']]
V_DES19=exp(DESEMPLEO19)
(CambioDESEMPLEO19=100*(1-1/V_DES19))
INFLACION19=coef(REGREVS19)[['BDU$`2019INFLACION`']]
V_INFLA19=exp(INFLACION19)
(CambioINFLACION19=100*(1-1/V_INFLA19))
REGREVS20 = glm(BDU$`2020PERCOR` ~ BDU$`2020DES` + BDU$`2020INFLACION`, family = poisson(link = "log"))
summary(REGREVS20)
equatiomatic::extract_eq(REGREVS20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVS20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DESEMPLEO20=coef(REGREVS20)[['BDU$`2020DES`']]
V_DES20=exp(DESEMPLEO20)
(CambioDESEMPLEO20=100*(1-1/V_DES20))
INFLACION20=coef(REGREVS20)[['BDU$`2020INFLACION`']]
V_INFLA20=exp(INFLACION20)
(CambioINFLACION19=100*(1-1/V_INFLA20))
REGREVANA19 = glm(BDU$`2019PERCOR` ~ BDU$`2019PAR` + BDU$`2019IDH` + BDU$`2019LEG`,family = poisson(link = "log"))
summary(REGREVANA19)
equatiomatic::extract_eq(REGREVANA19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVANA19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DEMOCRACIA19=coef(REGREVANA19)[['BDU$`2019PAR`']]
V_DEM19=exp(DEMOCRACIA19)
(CambioDEMOCRACIA19=100*(1-1/V_DEM19))
IDH19=coef(REGREVANA19)[['BDU$`2019IDH`']]
V_IDH19=exp(IDH19)
(CambioIDH19=100*(V_IDH19))
LEGITIMIDAD19=coef(REGREVANA19)[['BDU$`2019LEG`']]
V_LEG19=exp(LEGITIMIDAD19)
(CambioLEGITIMIDAD20=100*(1-1/V_LEG19))
REGREVANA20 = glm(BDU$`2020PERCOR` ~ BDU$`2020PAR` + BDU$`2020IDH` + BDU$`2020LEG`,family = poisson(link = "log"))
summary(REGREVANA20)
equatiomatic::extract_eq(REGREVANA20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVANA20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DEMOCRACIA20=coef(REGREVANA20)[['BDU$`2020PAR`']]
V_DEM20=exp(DEMOCRACIA20)
(CambioDEMOCRACIA20=100*(1-1/V_DEM20))
IDH20=coef(REGREVANA20)[['BDU$`2020IDH`']]
V_IDH20=exp(IDH20)
(CambioIDH20=100*(V_IDH20))
LEGITIMIDAD20=coef(REGREVANA20)[['BDU$`2020LEG`']]
V_LEG20=exp(LEGITIMIDAD20)
(CambioLEGITIMIDAD20=100*(1-1/V_LEG20))
library(rio)
library(dplyr)
library(ggplot2)
library(cowplot)
library(kableExtra)
library(equatiomatic)
library(tables)
library(rmarkdown)
library(reshape)
library(DT)
library(modelsummary)
library(factoextra)
library(cluster)
LinkBDU = "https://github.com/santiagomv29/PRACTICAS_ESTA2/raw/main/dataunificada.csv"
library(rio)
BDU = import(LinkBDU)
datatable(BDU, filter = "top")
library(sp)
library(rgdal)
library(ggplot2)
mapDIS=sf::read_sf("fwdshapefile/world-administrative-boundaries.shp")
MAP = merge(mapDIS,BDU, by.x = "iso3", by.y = "ISO", all.x = T)
mapaleyendaL= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=MAP,
aes(fill=`2019PERCOR`),color = NA)
mapa3= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Percepción de corrupción - 2019", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa3
mapaleyendaL2= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL2= mapaleyendaL2 + geom_sf(data=MAP,
aes(fill=`2020PERCOR`),color = NA)
mapa4= mapaleyL2 +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Percepción de corrupción - 2020", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa4
REGREVA19 = glm(BDU$`2019PERCOR` ~ BDU$`2019INDEP` + BDU$`2019ELECT` + BDU$`2019AUSCORR`,family = poisson(link = "log"))
summary(REGREVA19)
equatiomatic::extract_eq(REGREVA19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVA19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
INDEPENDENCIA19=coef(REGREVA19)[['BDU$`2019INDEP`']]
V_INJUS19=exp(INDEPENDENCIA19)
(CambioINDEPENDENCIA19=100*(V_INJUS19))
ELECTO19=coef(REGREVA19)[['BDU$`2019ELECT`']]
V_ELECT19=exp(ELECTO19)
(CambioELECTO19=100*(1-1/V_ELECT19))
AUSENCIA19=coef(REGREVA19)[['BDU$`2019AUSCORR`']]
V_AUSCORR19=exp(AUSENCIA19)
(CambioAUSENCIA19=100*(V_AUSCORR19))
REGREVA20 = glm(BDU$`2020PERCOR` ~ BDU$`2020INDEP` + BDU$`2020ELECT` + BDU$`2020AUSCORR`,family = poisson(link = "log"))
summary(REGREVA20)
equatiomatic::extract_eq(REGREVA20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVA20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
INDEPENDENCIA20=coef(REGREVA20)[['BDU$`2020INDEP`']]
V_INJUS20=exp(INDEPENDENCIA20)
(CambioINDEPENDENCIA20=100*(V_INJUS20))
ELECTO20=coef(REGREVA20)[['BDU$`2020ELECT`']]
V_ELECT20=exp(ELECTO20)
(CambioELECTO20=100*(1-1/V_ELECT20))
AUSENCIA20=coef(REGREVA20)[['BDU$`2020AUSCORR`']]
V_AUSCORR20=exp(AUSENCIA20)
(CambioAUSENCIA20=100*(V_AUSCORR20))
REGREVS19 = glm(BDU$`2019PERCOR` ~ BDU$`2019DES` + BDU$`2019INFLACION`,family = poisson(link = "log"))
summary(REGREVS19)
equatiomatic::extract_eq(REGREVS19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVS19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DESEMPLEO19=coef(REGREVS19)[['BDU$`2019DES`']]
V_DES19=exp(DESEMPLEO19)
(CambioDESEMPLEO19=100*(1-1/V_DES19))
INFLACION19=coef(REGREVS19)[['BDU$`2019INFLACION`']]
V_INFLA19=exp(INFLACION19)
(CambioINFLACION19=100*(1-1/V_INFLA19))
REGREVS20 = glm(BDU$`2020PERCOR` ~ BDU$`2020DES` + BDU$`2020INFLACION`, family = poisson(link = "log"))
summary(REGREVS20)
equatiomatic::extract_eq(REGREVS20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVS20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DESEMPLEO20=coef(REGREVS20)[['BDU$`2020DES`']]
V_DES20=exp(DESEMPLEO20)
(CambioDESEMPLEO20=100*(1-1/V_DES20))
INFLACION20=coef(REGREVS20)[['BDU$`2020INFLACION`']]
V_INFLA20=exp(INFLACION20)
(CambioINFLACION19=100*(1-1/V_INFLA20))
REGREVANA19 = glm(BDU$`2019PERCOR` ~ BDU$`2019PAR` + BDU$`2019IDH` + BDU$`2019LEG`,family = poisson(link = "log"))
summary(REGREVANA19)
equatiomatic::extract_eq(REGREVANA19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVANA19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DEMOCRACIA19=coef(REGREVANA19)[['BDU$`2019PAR`']]
V_DEM19=exp(DEMOCRACIA19)
(CambioDEMOCRACIA19=100*(1-1/V_DEM19))
IDH19=coef(REGREVANA19)[['BDU$`2019IDH`']]
V_IDH19=exp(IDH19)
(CambioIDH19=100*(V_IDH19))
LEGITIMIDAD19=coef(REGREVANA19)[['BDU$`2019LEG`']]
V_LEG19=exp(LEGITIMIDAD19)
(CambioLEGITIMIDAD20=100*(1-1/V_LEG19))
REGREVANA20 = glm(BDU$`2020PERCOR` ~ BDU$`2020PAR` + BDU$`2020IDH` + BDU$`2020LEG`,family = poisson(link = "log"))
summary(REGREVANA20)
equatiomatic::extract_eq(REGREVANA20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVANA20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DEMOCRACIA20=coef(REGREVANA20)[['BDU$`2020PAR`']]
V_DEM20=exp(DEMOCRACIA20)
(CambioDEMOCRACIA20=100*(1-1/V_DEM20))
IDH20=coef(REGREVANA20)[['BDU$`2020IDH`']]
V_IDH20=exp(IDH20)
(CambioIDH20=100*(V_IDH20))
LEGITIMIDAD20=coef(REGREVANA20)[['BDU$`2020LEG`']]
V_LEG20=exp(LEGITIMIDAD20)
(CambioLEGITIMIDAD20=100*(1-1/V_LEG20))
library(rio)
library(dplyr)
library(ggplot2)
library(cowplot)
library(kableExtra)
library(equatiomatic)
library(tables)
library(rmarkdown)
library(reshape)
library(DT)
library(modelsummary)
library(factoextra)
library(cluster)
LinkBDU = "https://github.com/santiagomv29/PRACTICAS_ESTA2/raw/main/dataunificada.csv"
library(rio)
BDU = import(LinkBDU)
datatable(BDU, filter = "top")
library(sp)
library(rgdal)
library(ggplot2)
mapDIS=sf::read_sf("fwdshapefile/world-administrative-boundaries.shp")
MAP = merge(mapDIS,BDU, by.x = "iso3", by.y = "ISO", all.x = T)
mapaleyendaL= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL= mapaleyendaL + geom_sf(data=MAP,
aes(fill=`2019PERCOR`),color = NA)
mapa3= mapaleyL +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Percepción de corrupción - 2019", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa3
mapaleyendaL2= ggplot(MAP)+ geom_sf() + theme_light()
mapaleyL2= mapaleyendaL2 + geom_sf(data=MAP,
aes(fill=`2020PERCOR`),color = NA)
mapa4= mapaleyL2 +
coord_sf() +
scale_fill_gradient(low = "seashell",  high = "firebrick", breaks=seq(from=0, to=1, by=.2)) + theme_void() +
theme(axis.title = element_blank(), axis.text = element_blank(), legend.position = c(1.1,0.55)) + labs(fill=" ") + theme(legend.text = element_text(size = 13)) +
labs(title = "Percepción de corrupción - 2020", subtitle = "") +
theme(
plot.title = element_text(color="black", size=15, face="bold"),
plot.caption = element_text(color = "black", size=10))
mapa4
REGREVA19 = glm(BDU$`2019PERCOR` ~ BDU$`2019INDEP` + BDU$`2019ELECT` + BDU$`2019AUSCORR`,family = poisson(link = "log"))
summary(REGREVA19)
equatiomatic::extract_eq(REGREVA19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVA19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
INDEPENDENCIA19=coef(REGREVA19)[['BDU$`2019INDEP`']]
V_INJUS19=exp(INDEPENDENCIA19)
(CambioINDEPENDENCIA19=100*(V_INJUS19))
ELECTO19=coef(REGREVA19)[['BDU$`2019ELECT`']]
V_ELECT19=exp(ELECTO19)
(CambioELECTO19=100*(1-1/V_ELECT19))
AUSENCIA19=coef(REGREVA19)[['BDU$`2019AUSCORR`']]
V_AUSCORR19=exp(AUSENCIA19)
(CambioAUSENCIA19=100*(V_AUSCORR19))
REGREVA20 = glm(BDU$`2020PERCOR` ~ BDU$`2020INDEP` + BDU$`2020ELECT` + BDU$`2020AUSCORR`,family = poisson(link = "log"))
summary(REGREVA20)
equatiomatic::extract_eq(REGREVA20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVA20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
INDEPENDENCIA20=coef(REGREVA20)[['BDU$`2020INDEP`']]
V_INJUS20=exp(INDEPENDENCIA20)
(CambioINDEPENDENCIA20=100*(V_INJUS20))
ELECTO20=coef(REGREVA20)[['BDU$`2020ELECT`']]
V_ELECT20=exp(ELECTO20)
(CambioELECTO20=100*(1-1/V_ELECT20))
AUSENCIA20=coef(REGREVA20)[['BDU$`2020AUSCORR`']]
V_AUSCORR20=exp(AUSENCIA20)
(CambioAUSENCIA20=100*(V_AUSCORR20))
REGREVS19 = glm(BDU$`2019PERCOR` ~ BDU$`2019DES` + BDU$`2019INFLACION`,family = poisson(link = "log"))
summary(REGREVS19)
equatiomatic::extract_eq(REGREVS19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVS19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DESEMPLEO19=coef(REGREVS19)[['BDU$`2019DES`']]
V_DES19=exp(DESEMPLEO19)
(CambioDESEMPLEO19=100*(1-1/V_DES19))
INFLACION19=coef(REGREVS19)[['BDU$`2019INFLACION`']]
V_INFLA19=exp(INFLACION19)
(CambioINFLACION19=100*(1-1/V_INFLA19))
REGREVS20 = glm(BDU$`2020PERCOR` ~ BDU$`2020DES` + BDU$`2020INFLACION`, family = poisson(link = "log"))
summary(REGREVS20)
equatiomatic::extract_eq(REGREVS20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVS20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DESEMPLEO20=coef(REGREVS20)[['BDU$`2020DES`']]
V_DES20=exp(DESEMPLEO20)
(CambioDESEMPLEO20=100*(1-1/V_DES20))
INFLACION20=coef(REGREVS20)[['BDU$`2020INFLACION`']]
V_INFLA20=exp(INFLACION20)
(CambioINFLACION19=100*(1-1/V_INFLA20))
REGREVANA19 = glm(BDU$`2019PERCOR` ~ BDU$`2019PAR` + BDU$`2019IDH` + BDU$`2019LEG`,family = poisson(link = "log"))
summary(REGREVANA19)
equatiomatic::extract_eq(REGREVANA19, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVANA19, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DEMOCRACIA19=coef(REGREVANA19)[['BDU$`2019PAR`']]
V_DEM19=exp(DEMOCRACIA19)
(CambioDEMOCRACIA19=100*(1-1/V_DEM19))
IDH19=coef(REGREVANA19)[['BDU$`2019IDH`']]
V_IDH19=exp(IDH19)
(CambioIDH19=100*(V_IDH19))
LEGITIMIDAD19=coef(REGREVANA19)[['BDU$`2019LEG`']]
V_LEG19=exp(LEGITIMIDAD19)
(CambioLEGITIMIDAD20=100*(1-1/V_LEG19))
REGREVANA20 = glm(BDU$`2020PERCOR` ~ BDU$`2020PAR` + BDU$`2020IDH` + BDU$`2020LEG`,family = poisson(link = "log"))
summary(REGREVANA20)
equatiomatic::extract_eq(REGREVANA20, use_coefs = TRUE)
model=list('PERCOR.y.x'=BDU)
modelsummary(REGREVANA20, title = "Poisson",
stars = TRUE,
output = "kableExtra")
DEMOCRACIA20=coef(REGREVANA20)[['BDU$`2020PAR`']]
V_DEM20=exp(DEMOCRACIA20)
(CambioDEMOCRACIA20=100*(1-1/V_DEM20))
IDH20=coef(REGREVANA20)[['BDU$`2020IDH`']]
V_IDH20=exp(IDH20)
(CambioIDH20=100*(V_IDH20))
LEGITIMIDAD20=coef(REGREVANA20)[['BDU$`2020LEG`']]
V_LEG20=exp(LEGITIMIDAD20)
(CambioLEGITIMIDAD20=100*(1-1/V_LEG20))
